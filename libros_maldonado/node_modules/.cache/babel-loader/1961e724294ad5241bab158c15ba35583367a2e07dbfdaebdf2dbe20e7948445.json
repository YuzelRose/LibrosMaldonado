{"ast":null,"code":"export const generateXML = () => {\n  return `\n    <UserSession>\n        <Cart>\n        </Cart>\n        <FavList>\n        </FavList>\n    </UserSession>`;\n};\nexport const addToCart = item => {\n  const userSessionXML = localStorage.getItem('userSession');\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(userSessionXML, \"text/xml\");\n  const newCartItem = xmlDoc.createElement(\"Item\");\n  newCartItem.setAttribute(\"Id\", item);\n  const itemIdElement = xmlDoc.createElement(\"ID\");\n  itemIdElement.textContent = item;\n  const quantityElement = xmlDoc.createElement(\"Cantidad\");\n  quantityElement.textContent = 1;\n  newCartItem.appendChild(itemIdElement);\n  newCartItem.appendChild(quantityElement);\n  const cartElement = xmlDoc.getElementsByTagName(\"Cart\")[0];\n  cartElement.appendChild(newCartItem);\n  const serializer = new XMLSerializer();\n  const updatedXML = serializer.serializeToString(xmlDoc);\n  localStorage.setItem('userSession', updatedXML);\n  alert('Artículo agregado al carrito con éxito.');\n  console.log(localStorage.getItem('userSession'));\n};\nexport const removeFromCart = itemId => {\n  const userSessionXML = localStorage.getItem('userSession');\n  if (userSessionXML) {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(userSessionXML, 'text/xml');\n    const cartElement = xmlDoc.getElementsByTagName('Cart')[0];\n    if (cartElement) {\n      const items = cartElement.getElementsByTagName('Item');\n      for (let i = 0; i < items.length; i++) {\n        const idElement = items[i].getElementsByTagName('ID')[0];\n        if (idElement && idElement.textContent === String(itemId)) {\n          cartElement.removeChild(items[i]);\n          break;\n        }\n      }\n      const serializer = new XMLSerializer();\n      const updatedXML = serializer.serializeToString(xmlDoc);\n      localStorage.setItem('userSession', updatedXML);\n    }\n  }\n};\nexport const addToFavorites = item => {\n  const userSessionXML = localStorage.getItem('userSession');\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(userSessionXML, \"text/xml\");\n  const newFavItem = xmlDoc.createElement(\"Item\");\n  newFavItem.textContent = item;\n  const favListElement = xmlDoc.getElementsByTagName(\"FavList\")[0];\n  favListElement.appendChild(newFavItem);\n  const serializer = new XMLSerializer();\n  const updatedXML = serializer.serializeToString(xmlDoc);\n  localStorage.setItem('userSession', updatedXML);\n  alert('Artículo agregado a favoritos con éxito.');\n};\nexport const removeFromFavorites = itemId => {\n  const userSessionXML = localStorage.getItem('userSession');\n  if (userSessionXML) {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(userSessionXML, 'text/xml');\n    const FavListElement = xmlDoc.getElementsByTagName('FavList')[0];\n    if (FavListElement) {\n      const items = FavListElement.getElementsByTagName('Item');\n      for (let i = 0; i < items.length; i++) {\n        const idElement = items[i].getElementsByTagName('ID')[0];\n        if (idElement && idElement.textContent === String(itemId)) {\n          FavListElement.removeChild(items[i]);\n          break;\n        }\n      }\n      const serializer = new XMLSerializer();\n      const updatedXML = serializer.serializeToString(xmlDoc);\n      localStorage.setItem('userSession', updatedXML);\n    }\n  }\n};\nexport const isCreated = () => {\n  const userSessionXML = localStorage.getItem('userSession');\n  return !!userSessionXML;\n};\nexport const eliminateXML = setUSer => {\n  setUSer([]);\n  localStorage.removeItem('userSession');\n  alert('Sesión cerrada.');\n};","map":{"version":3,"names":["generateXML","addToCart","item","userSessionXML","localStorage","getItem","parser","DOMParser","xmlDoc","parseFromString","newCartItem","createElement","setAttribute","itemIdElement","textContent","quantityElement","appendChild","cartElement","getElementsByTagName","serializer","XMLSerializer","updatedXML","serializeToString","setItem","alert","console","log","removeFromCart","itemId","items","i","length","idElement","String","removeChild","addToFavorites","newFavItem","favListElement","removeFromFavorites","FavListElement","isCreated","eliminateXML","setUSer","removeItem"],"sources":["C:/Users/User/OneDrive/Documentos/.Trabajo/MERN LIBMAL/libros_maldonado/src/backend/utils/XMLUtils.js"],"sourcesContent":["export const generateXML = () => {\r\n    return `\r\n    <UserSession>\r\n        <Cart>\r\n        </Cart>\r\n        <FavList>\r\n        </FavList>\r\n    </UserSession>`;\r\n}\r\n\r\nexport const addToCart = (item) => { \r\n    const userSessionXML = localStorage.getItem('userSession');\r\n    const parser = new DOMParser();\r\n    const xmlDoc = parser.parseFromString(userSessionXML, \"text/xml\");\r\n    \r\n    const newCartItem = xmlDoc.createElement(\"Item\");\r\n    newCartItem.setAttribute(\"Id\", item); \r\n    const itemIdElement = xmlDoc.createElement(\"ID\");\r\n    itemIdElement.textContent = item; \r\n    const quantityElement = xmlDoc.createElement(\"Cantidad\");\r\n    quantityElement.textContent = 1; \r\n    \r\n    newCartItem.appendChild(itemIdElement);\r\n    newCartItem.appendChild(quantityElement);\r\n\r\n    const cartElement = xmlDoc.getElementsByTagName(\"Cart\")[0];\r\n    cartElement.appendChild(newCartItem);\r\n\r\n    const serializer = new XMLSerializer();\r\n    const updatedXML = serializer.serializeToString(xmlDoc);\r\n    localStorage.setItem('userSession', updatedXML);\r\n    alert('Artículo agregado al carrito con éxito.');\r\n    console.log(localStorage.getItem('userSession'));\r\n}\r\n\r\nexport const removeFromCart = (itemId) => {\r\n    const userSessionXML = localStorage.getItem('userSession');\r\n    if (userSessionXML) {\r\n        const parser = new DOMParser();\r\n        const xmlDoc = parser.parseFromString(userSessionXML, 'text/xml');\r\n        const cartElement = xmlDoc.getElementsByTagName('Cart')[0];\r\n        if (cartElement) {\r\n            const items = cartElement.getElementsByTagName('Item');\r\n            for (let i = 0; i < items.length; i++) {\r\n                const idElement = items[i].getElementsByTagName('ID')[0];\r\n                if (idElement && idElement.textContent === String(itemId)) {\r\n                    cartElement.removeChild(items[i]);\r\n                    break;\r\n                }\r\n            }\r\n            const serializer = new XMLSerializer();\r\n            const updatedXML = serializer.serializeToString(xmlDoc);\r\n            localStorage.setItem('userSession', updatedXML);\r\n        }\r\n    }\r\n}\r\n\r\nexport const addToFavorites = (item) => {\r\n    const userSessionXML = localStorage.getItem('userSession');\r\n    const parser = new DOMParser();\r\n    const xmlDoc = parser.parseFromString(userSessionXML, \"text/xml\");\r\n\r\n    const newFavItem = xmlDoc.createElement(\"Item\");\r\n    newFavItem.textContent = item;\r\n\r\n    const favListElement = xmlDoc.getElementsByTagName(\"FavList\")[0];\r\n    favListElement.appendChild(newFavItem);\r\n\r\n    const serializer = new XMLSerializer();\r\n    const updatedXML = serializer.serializeToString(xmlDoc);\r\n\r\n    localStorage.setItem('userSession', updatedXML);\r\n    alert('Artículo agregado a favoritos con éxito.');\r\n}\r\n\r\nexport const removeFromFavorites = (itemId) => {\r\n    const userSessionXML = localStorage.getItem('userSession');\r\n    if (userSessionXML) {\r\n        const parser = new DOMParser();\r\n        const xmlDoc = parser.parseFromString(userSessionXML, 'text/xml');\r\n        const FavListElement = xmlDoc.getElementsByTagName('FavList')[0];\r\n        if (FavListElement) {\r\n            const items = FavListElement.getElementsByTagName('Item');\r\n            for (let i = 0; i < items.length; i++) {\r\n                const idElement = items[i].getElementsByTagName('ID')[0];\r\n                if (idElement && idElement.textContent === String(itemId)) {\r\n                    FavListElement.removeChild(items[i]);\r\n                    break;\r\n                }\r\n            }\r\n            const serializer = new XMLSerializer();\r\n            const updatedXML = serializer.serializeToString(xmlDoc);\r\n            localStorage.setItem('userSession', updatedXML);\r\n        }\r\n    }\r\n}\r\n\r\nexport const isCreated = () => {\r\n    const userSessionXML = localStorage.getItem('userSession');\r\n    return !!userSessionXML; \r\n}\r\n\r\nexport const eliminateXML = (setUSer) => {\r\n    setUSer([])\r\n    localStorage.removeItem('userSession');\r\n    alert('Sesión cerrada.');\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}