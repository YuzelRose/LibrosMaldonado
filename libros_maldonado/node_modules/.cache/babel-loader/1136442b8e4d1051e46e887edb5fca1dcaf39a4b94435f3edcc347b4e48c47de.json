{"ast":null,"code":"// localStorageCRUD.js\n\nconst LOCAL_STORAGE_KEY = 'LibMal'; // Cambia esto según tu necesidad\n\nconst generateJSON = () => {\n  return `\n    {\n        \"cart\": [],\n        \"list\": []\n    }\n    `;\n};\nexport const initData = () => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, generateJSON());\n};\n\n// Función para obtener los datos del Local Storage\nconst getData = () => {\n  const data = localStorage.getItem(LOCAL_STORAGE_KEY);\n  return data ? JSON.parse(data) : {\n    cart: [],\n    list: []\n  };\n};\n\n// Función para guardar datos en el Local Storage\nconst saveData = data => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(data));\n};\n\n// Función para agregar un item al cart\nexport const addToCart = (newItem, cant = 1) => {\n  const currentData = getData();\n  const existingItem = currentData.cart.find(item => item.ID === newItem);\n  if (existingItem) {\n    existingItem.cant += cant;\n    alert(\"Cantidad aumentada\");\n  } else {\n    currentData.cart.push({\n      \"ID\": newItem,\n      \"cant\": cant\n    });\n    alert(\"Agregado al carrito\");\n  }\n  saveData(currentData);\n};\n\n// Función para actualizar la cantidad de un item en el cart\nexport const updateCartItem = (id, amount) => {\n  const currentData = getData();\n  const item = currentData.cart.find(item => item.ID === id);\n  if (item) {\n    item.cant += amount;\n    if (item.cant <= 0) {\n      deleteCartItem(id);\n    } else {\n      saveData(currentData);\n    }\n  }\n};\nexport const changeCartToList = id => {\n  const currentData = getData();\n  const existingItem = currentData.list.find(item => item.ID === id);\n  if (!existingItem) {\n    currentData.list.push({\n      \"ID\": id\n    });\n  }\n  currentData.cart = currentData.cart.filter(item => item.ID !== id);\n  alert(\"Movido a la lista\");\n  saveData(currentData);\n};\n\n// Función para eliminar un item del cart\nexport const deleteCartItem = id => {\n  const currentData = getData();\n  currentData.cart = currentData.cart.filter(item => item.ID !== id);\n  alert(\"Eliminado del carrito\");\n  saveData(currentData);\n};\n\n// Función para agregar un item a la list\nexport const addToList = newItem => {\n  const currentData = getData();\n  const existingItem = currentData.list.find(item => item.ID === newItem);\n  if (!existingItem) {\n    currentData.list.push({\n      \"ID\": newItem\n    });\n    alert(\"Agregado a la lista\");\n    saveData(currentData);\n  }\n};\n\n// Función para eliminar un item de la list\nexport const deleteListItem = id => {\n  const currentData = getData();\n  currentData.list = currentData.list.filter(item => item.ID !== id);\n  alert(\"Eliminado de favoritos\");\n  saveData(currentData);\n};\n\n// Función para obtener items del cart y list\nexport const getCart = () => {\n  return getData().cart;\n};\nexport const getList = () => {\n  return getData().list;\n};\nexport const getListItemIds = () => {\n  const currentData = getData();\n  return currentData.list.map(item => item.ID);\n};\nexport const getCartItemIds = () => {\n  const currentData = getData();\n  return currentData.cart.map(item => item.ID);\n};\nexport const getCartItemCants = () => {\n  const currentData = getData();\n  return currentData.cart.reduce((acc, item) => {\n    acc[item.ID] = item.cant;\n    return acc;\n  }, {});\n};\nexport const downloadJSON = () => {\n  const data = localStorage.getItem(LOCAL_STORAGE_KEY);\n  const jsonData = data ? JSON.parse(data) : {\n    cart: [],\n    list: []\n  };\n  const jsonString = JSON.stringify(jsonData, null, 2);\n  const blob = new Blob([jsonString], {\n    type: 'application/json'\n  });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'data.json';\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n};\nexport const deleteJSON = () => {\n  localStorage.removeItem(LOCAL_STORAGE_KEY);\n};","map":{"version":3,"names":["LOCAL_STORAGE_KEY","generateJSON","initData","localStorage","setItem","getData","data","getItem","JSON","parse","cart","list","saveData","stringify","addToCart","newItem","cant","currentData","existingItem","find","item","ID","alert","push","updateCartItem","id","amount","deleteCartItem","changeCartToList","filter","addToList","deleteListItem","getCart","getList","getListItemIds","map","getCartItemIds","getCartItemCants","reduce","acc","downloadJSON","jsonData","jsonString","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","deleteJSON","removeItem"],"sources":["C:/Users/User/OneDrive/Documentos/.Trabajo/MERN LIBMAL/libros_maldonado/src/backend/utils/JsonUtils.js"],"sourcesContent":["// localStorageCRUD.js\r\n\r\nconst LOCAL_STORAGE_KEY = 'LibMal'; // Cambia esto según tu necesidad\r\n\r\nconst generateJSON = () => {\r\n    return `\r\n    {\r\n        \"cart\": [],\r\n        \"list\": []\r\n    }\r\n    `;\r\n}\r\n\r\nexport const initData = () => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, generateJSON());\r\n}\r\n\r\n// Función para obtener los datos del Local Storage\r\nconst getData = () => {\r\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n    return data ? JSON.parse(data) : { cart: [], list: [] };\r\n};\r\n\r\n// Función para guardar datos en el Local Storage\r\nconst saveData = (data) => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(data));\r\n};\r\n\r\n// Función para agregar un item al cart\r\nexport const addToCart = (newItem, cant = 1) => {\r\n    const currentData = getData();\r\n    const existingItem = currentData.cart.find(item => item.ID === newItem);\r\n    if (existingItem) {\r\n        existingItem.cant += cant;\r\n       alert(\"Cantidad aumentada\");\r\n    } else {\r\n        currentData.cart.push({ \"ID\": newItem, \"cant\": cant });\r\n        alert(\"Agregado al carrito\");\r\n    }\r\n    saveData(currentData);\r\n};\r\n\r\n\r\n// Función para actualizar la cantidad de un item en el cart\r\nexport const updateCartItem = (id, amount) => {\r\n    const currentData = getData();\r\n    const item = currentData.cart.find(item => item.ID === id);\r\n    if (item) {\r\n        item.cant += amount;\r\n        if (item.cant <= 0) {\r\n            deleteCartItem(id);\r\n        } else {\r\n            saveData(currentData);\r\n        }\r\n    }\r\n};\r\n\r\nexport const changeCartToList = (id) => {\r\n    const currentData = getData();\r\n    const existingItem = currentData.list.find(item => item.ID === id);\r\n    if (!existingItem) {\r\n        currentData.list.push({ \"ID\": id });\r\n    }\r\n    currentData.cart = currentData.cart.filter(item => item.ID !== id);\r\n    alert(\"Movido a la lista\");\r\n    saveData(currentData);\r\n}\r\n\r\n// Función para eliminar un item del cart\r\nexport const deleteCartItem = (id) => {\r\n    const currentData = getData();\r\n    currentData.cart = currentData.cart.filter(item => item.ID !== id);\r\n    alert(\"Eliminado del carrito\");\r\n    saveData(currentData);\r\n};\r\n\r\n// Función para agregar un item a la list\r\nexport const addToList = (newItem) => {\r\n    const currentData = getData();\r\n    const existingItem = currentData.list.find(item => item.ID === newItem);\r\n    if (!existingItem) {\r\n        currentData.list.push({ \"ID\": newItem });\r\n        alert(\"Agregado a la lista\");\r\n        saveData(currentData);\r\n    }\r\n};\r\n\r\n// Función para eliminar un item de la list\r\nexport const deleteListItem = (id) => {\r\n    const currentData = getData();\r\n    currentData.list = currentData.list.filter(item => item.ID !== id);\r\n    alert(\"Eliminado de favoritos\");\r\n    saveData(currentData);\r\n};\r\n\r\n// Función para obtener items del cart y list\r\nexport const getCart = () => {\r\n    return getData().cart;\r\n};\r\n\r\nexport const getList = () => {\r\n    return getData().list;\r\n};\r\n\r\nexport const getListItemIds = () => {\r\n    const currentData = getData(); \r\n    return currentData.list.map(item => item.ID); \r\n};\r\n\r\nexport const getCartItemIds = () => {\r\n    const currentData = getData();\r\n    return currentData.cart.map(item => item.ID); \r\n};\r\n\r\nexport const getCartItemCants = () => {\r\n    const currentData = getData();\r\n    return currentData.cart.reduce((acc, item) => {\r\n        acc[item.ID] = item.cant;\r\n        return acc;\r\n    }, {});\r\n \r\n};\r\n\r\nexport const downloadJSON = () => {\r\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n    const jsonData = data ? JSON.parse(data) : { cart: [], list: [] }; \r\n    const jsonString = JSON.stringify(jsonData, null, 2); \r\n    const blob = new Blob([jsonString], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'data.json'; \r\n    document.body.appendChild(a); \r\n    a.click(); \r\n    document.body.removeChild(a); \r\n    URL.revokeObjectURL(url); \r\n};\r\n\r\nexport const deleteJSON = () => {\r\n    localStorage.removeItem(LOCAL_STORAGE_KEY); \r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}